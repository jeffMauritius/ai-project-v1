// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model PartnerStorefront {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Informations de l'entreprise
  companyName String
  description String
  logo        String?
  isActive    Boolean @default(false)

  // Informations de facturation
  billingStreet     String
  billingCity       String
  billingPostalCode String
  billingCountry    String
  siret             String
  vatNumber         String

  // Adresse du lieu
  venueAddress   String?
  venueLatitude  Float?
  venueLongitude Float?

  // Zone d'intervention
  interventionType   String @default("all_france")
  interventionRadius Int?   @default(50)

  // Relations
  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  @@map("partner_storefronts")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  name          String?
  email         String?   @unique
  password      String
  emailVerified DateTime?
  image         String?
  role          String    @default("USER")
  
  // Relations
  storefront    PartnerStorefront?
  profile       Profile?

  @@map("User")
}

model Profile {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  avatar      String?
  phone       String?
  address     String?
  company     String?
  website     String?
  bio         String?
  
  // Relations
  userId      String   @unique @db.ObjectId
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}

enum Role {
  USER
  PARTNER
  ADMIN
}