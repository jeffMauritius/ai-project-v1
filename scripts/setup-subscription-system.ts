#!/usr/bin/env tsx

import { execSync } from 'child_process'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function setupSubscriptionSystem() {
  try {
    console.log('üöÄ Configuration du syst√®me d\'abonnement...')

    // 1. G√©n√©rer le client Prisma avec les nouveaux mod√®les
    console.log('üì¶ G√©n√©ration du client Prisma...')
    execSync('npx prisma generate', { stdio: 'inherit' })

    // 2. Pousser les changements de sch√©ma vers la base de donn√©es
    console.log('üóÑÔ∏è Mise √† jour de la base de donn√©es...')
    execSync('npx prisma db push', { stdio: 'inherit' })

    // 3. Initialiser les plans d'abonnement par d√©faut
    console.log('üìã Initialisation des plans d\'abonnement...')
    
    const defaultPlans = [
      {
        name: "Essentiel",
        description: "L'essentiel pour d√©marrer",
        price: 29.00,
        currency: "EUR",
        billingInterval: "MONTHLY" as const,
        features: [
          "Profil professionnel",
          "Messagerie avec les clients",
          "Jusqu'√† 10 photos",
          "Statistiques de base",
          "Support par email"
        ],
        isActive: true,
        isPopular: false,
        maxPhotos: 10
      },
      {
        name: "Pro",
        description: "Pour les professionnels √©tablis",
        price: 79.00,
        currency: "EUR",
        billingInterval: "MONTHLY" as const,
        features: [
          "Tout de l'offre Essentiel",
          "Photos illimit√©es",
          "Mise en avant dans les recherches",
          "Statistiques avanc√©es",
          "Support prioritaire",
          "Acc√®s aux √©v√©nements premium"
        ],
        isActive: true,
        isPopular: true,
        maxPhotos: null
      },
      {
        name: "Premium",
        description: "Pour une visibilit√© maximale",
        price: 149.00,
        currency: "EUR",
        billingInterval: "MONTHLY" as const,
        features: [
          "Tout de l'offre Pro",
          "Badge Premium sur votre profil",
          "Acc√®s aux mariages VIP",
          "Accompagnement personnalis√©",
          "Formation marketing incluse",
          "Support t√©l√©phonique"
        ],
        isActive: true,
        isPopular: false,
        maxPhotos: null
      }
    ]

    // Cr√©er les plans mensuels
    for (const plan of defaultPlans) {
      const existingPlan = await prisma.subscriptionPlan.findFirst({
        where: {
          name: plan.name,
          billingInterval: plan.billingInterval
        }
      })

      if (existingPlan) {
        console.log(`‚úÖ Plan ${plan.name} (mensuel) existe d√©j√†`)
        await prisma.subscriptionPlan.update({
          where: { id: existingPlan.id },
          data: {
            ...plan,
            updatedAt: new Date()
          }
        })
      } else {
        console.log(`‚ûï Cr√©ation du plan ${plan.name} (mensuel)`)
        await prisma.subscriptionPlan.create({
          data: plan
        })
      }
    }

    // Cr√©er les plans annuels avec 20% de r√©duction
    for (const plan of defaultPlans) {
      const yearlyPrice = Math.round(plan.price * 12 * 0.8) // 20% de r√©duction sur l'ann√©e
      
      const existingYearlyPlan = await prisma.subscriptionPlan.findFirst({
        where: {
          name: plan.name,
          billingInterval: "YEARLY"
        }
      })

      if (existingYearlyPlan) {
        console.log(`‚úÖ Plan ${plan.name} (annuel) existe d√©j√†`)
        await prisma.subscriptionPlan.update({
          where: { id: existingYearlyPlan.id },
          data: {
            ...plan,
            price: yearlyPrice,
            billingInterval: "YEARLY",
            updatedAt: new Date()
          }
        })
      } else {
        console.log(`‚ûï Cr√©ation du plan ${plan.name} (annuel)`)
        await prisma.subscriptionPlan.create({
          data: {
            ...plan,
            price: yearlyPrice,
            billingInterval: "YEARLY"
          }
        })
      }
    }

    console.log('‚úÖ Configuration du syst√®me d\'abonnement termin√©e avec succ√®s!')
    console.log('')
    console.log('üìã Plans cr√©√©s:')
    console.log('   - Essentiel: 29‚Ç¨/mois ou 279‚Ç¨/an')
    console.log('   - Pro: 79‚Ç¨/mois ou 759‚Ç¨/an')
    console.log('   - Premium: 149‚Ç¨/mois ou 1430‚Ç¨/an')
    console.log('')
    console.log('üéØ Prochaines √©tapes:')
    console.log('   1. Tester la cr√©ation d\'abonnements')
    console.log('   2. Int√©grer Stripe pour les paiements')
    console.log('   3. Configurer les webhooks de paiement')

  } catch (error) {
    console.error('‚ùå Erreur lors de la configuration:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

// Ex√©cuter le script
setupSubscriptionSystem() 