import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkStatus() {
  try {
    console.log('üîç V√©rification du statut de TRAITEUR 7...')

    // R√©cup√©rer un utilisateur existant
    const user = await prisma.user.findFirst()
    
    if (!user) {
      console.log('‚ùå Aucun utilisateur trouv√©.')
      return
    }

    // V√©rifier la consultation
    const consultation = await prisma.consultedStorefront.findFirst({
      where: {
        userId: user.id,
        storefrontId: '507f1f77bcf86cd799439016'
      }
    })

    if (consultation) {
      console.log(`üìã Consultation trouv√©e:`)
      console.log(`   - Nom: ${consultation.name}`)
      console.log(`   - Statut: ${consultation.status}`)
      console.log(`   - Type: ${consultation.type}`)
      console.log(`   - Service: ${consultation.serviceType}`)
      console.log(`   - Derni√®re mise √† jour: ${consultation.updatedAt}`)
    } else {
      console.log('‚ùå Aucune consultation trouv√©e pour TRAITEUR 7')
    }

    // V√©rifier le favori
    const favorite = await prisma.favorite.findFirst({
      where: {
        userId: user.id,
        storefrontId: '507f1f77bcf86cd799439016'
      }
    })

    if (favorite) {
      console.log(`\nüíñ Favori trouv√©:`)
      console.log(`   - Nom: ${favorite.name}`)
      console.log(`   - Cr√©√© le: ${favorite.createdAt}`)
    } else {
      console.log('\n‚ùå Aucun favori trouv√© pour TRAITEUR 7')
    }

  } catch (error) {
    console.error('‚ùå Erreur:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkStatus() 