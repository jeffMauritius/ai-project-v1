import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function createMonaIlsaPartner() {
  try {
    console.log('üë©‚Äçüé® Cr√©ation du partenaire Mona Ilsa...')

    // 1. Cr√©er l'utilisateur partenaire Mona Ilsa
    console.log('\n1. Cr√©ation de l\'utilisateur partenaire...')
    const monaIlsa = await prisma.user.upsert({
      where: { email: 'mona-ilsa@example.com' },
      update: {},
      create: {
        email: 'mona-ilsa@example.com',
        name: 'Mona Ilsa',
        password: 'mona-ilsa-password',
        role: 'PARTNER'
      }
    })
    console.log('‚úÖ Utilisateur partenaire cr√©√©:', monaIlsa.id)

    // 2. Cr√©er le profil partenaire
    console.log('\n2. Cr√©ation du profil partenaire...')
    let partnerProfile = await prisma.partner.findFirst({
      where: { userId: monaIlsa.id }
    })

    if (!partnerProfile) {
      partnerProfile = await prisma.partner.create({
        data: {
          companyName: 'Mona Ilsa',
          description: 'Lisa est passionn√©e par la cr√©ation de moments inoubliables. D√®s son plus jeune √¢ge, elle a √©t√© attir√©e par le dessin, le design et la cr√©ation. Apr√®s des √©tudes artistiques, son mariage en 2014 a √©t√© une r√©v√©lation qui l\'a conduite vers la d√©coration d\'√©v√©nements. Aujourd\'hui Wedding & Event Designer, elle croit que chaque √©v√©nement est unique et s\'efforce de personnaliser chaque concept.',
          serviceType: 'DECORATION',
          billingStreet: 'Rue de la Cr√©ativit√©',
          billingCity: 'Li√®ge',
          billingPostalCode: '4000',
          billingCountry: 'France',
          siret: '12345678901234',
          vatNumber: 'FR12345678901',
          interventionType: 'all_france',
          interventionRadius: 50,
          userId: monaIlsa.id
        }
      })
      console.log('‚úÖ Profil partenaire cr√©√©:', partnerProfile.id)
    } else {
      console.log('‚úÖ Profil partenaire existant:', partnerProfile.id)
    }

    // 3. Cr√©er le storefront
    console.log('\n3. Cr√©ation du storefront...')
    let storefront = await prisma.partnerStorefront.findFirst({
      where: { partnerId: partnerProfile.id }
    })

    if (!storefront) {
      storefront = await prisma.partnerStorefront.create({
        data: {
          type: 'PARTNER',
          isActive: true,
          partnerId: partnerProfile.id
        }
      })
      console.log('‚úÖ Storefront cr√©√©:', storefront.id)
    } else {
      console.log('‚úÖ Storefront existant:', storefront.id)
    }

    console.log('\nüéâ Partenaire Mona Ilsa cr√©√© avec succ√®s !')
    console.log('\nüì± Pour tester:')
    console.log('   1. Allez sur /partner/mona-ilsa')
    console.log('   2. Connectez-vous avec votre compte utilisateur')
    console.log('   3. Envoyez un message via le chat')
    console.log('   4. Le message appara√Ætra dans votre dashboard Messages')

  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Ex√©cuter la cr√©ation
createMonaIlsaPartner() 