import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function addTestFavorite() {
  try {
    console.log('üå± Ajout d\'un favori de test...')

    // R√©cup√©rer un utilisateur existant
    const user = await prisma.user.findFirst()
    
    if (!user) {
      console.log('‚ùå Aucun utilisateur trouv√©.')
      return
    }

    console.log(`üë§ Utilisateur: ${user.email}`)

    // Cr√©er un favori de test pour "TRAITEUR 7"
    const testFavorite = await prisma.favorite.create({
      data: {
        storefrontId: '507f1f77bcf86cd799439016', // ID fictif pour TRAITEUR 7
        name: 'TRAITEUR 7',
        location: 'Paris, France',
        rating: 4.5,
        numberOfReviews: 12,
        description: 'Traiteur sp√©cialis√© en cuisine fran√ßaise',
        imageUrl: '/placeholder-venue.jpg',
        userId: user.id
      }
    })

    console.log(`‚úÖ Favori cr√©√©: ${testFavorite.name} (${testFavorite.storefrontId})`)

    // V√©rifier si une consultation existe d√©j√†
    const existingConsultation = await prisma.consultedStorefront.findFirst({
      where: {
        userId: user.id,
        storefrontId: '507f1f77bcf86cd799439016'
      }
    })

    if (existingConsultation) {
      console.log(`üìã Consultation existante trouv√©e: ${existingConsultation.name} - ${existingConsultation.status}`)
      
      // Mettre √† jour le statut vers SAVED
      const updatedConsultation = await prisma.consultedStorefront.update({
        where: { id: existingConsultation.id },
        data: { status: 'SAVED' }
      })
      
      console.log(`‚úÖ Statut mis √† jour: ${updatedConsultation.status}`)
    } else {
      console.log(`‚ùå Aucune consultation trouv√©e pour TRAITEUR 7`)
      
      // Cr√©er une consultation avec statut SAVED
      const newConsultation = await prisma.consultedStorefront.create({
        data: {
          storefrontId: '507f1f77bcf86cd799439016',
          name: 'TRAITEUR 7',
          type: 'PARTNER',
          serviceType: 'TRAITEUR',
          status: 'SAVED',
          userId: user.id
        }
      })
      
      console.log(`‚úÖ Nouvelle consultation cr√©√©e: ${newConsultation.name} - ${newConsultation.status}`)
    }

    console.log('\n‚úÖ Test termin√©!')

  } catch (error) {
    console.error('‚ùå Erreur:', error)
  } finally {
    await prisma.$disconnect()
  }
}

addTestFavorite() 